<script src="https://cdn.jsdelivr.net/npm/url-parse@1.5.10/dist/url-parse.min.js"></script>
<script>
  
window.theme = window.theme || {};

var formatMoney = function(cents, format) {
  if (typeof cents == 'string') { cents = cents.replace('.',''); }
  var value = '';
  var placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
  var formatString = (format || this.money_format);

  function defaultOption(opt, def) {
     return (typeof opt == 'undefined' ? def : opt);
  }

  function formatWithDelimiters(number, precision, thousands, decimal) {
    precision = defaultOption(precision, 2);
    thousands = defaultOption(thousands, ',');
    decimal   = defaultOption(decimal, '.');

    if (isNaN(number) || number == null) { return 0; }

    number = (number/100.0).toFixed(precision);

    var parts   = number.split('.'),
        dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands),
        cents   = parts[1] ? (decimal + parts[1]) : '';

    return dollars + cents;
  }

  switch(formatString.match(placeholderRegex)[1]) {
    case 'amount':
      value = formatWithDelimiters(cents, 2);
      break;
    case 'amount_no_decimals':
      value = formatWithDelimiters(cents, 0);
      break;
    case 'amount_with_comma_separator':
      value = formatWithDelimiters(cents, 2, '.', ',');
      break;
    case 'amount_no_decimals_with_comma_separator':
      value = formatWithDelimiters(cents, 0, '.', ',');
      break;
  }

  return formatString.replace(placeholderRegex, value);
};

  var product = {{ product | json }}
  
  document.querySelectorAll('input[type="radio"]').forEach( radio =>{
  radio.addEventListener("change", () => {

    var selectedOptions = [];
    document.querySelectorAll('input[type="radio"]:checked').forEach( radio =>{
        selectedOptions.push(radio.value)
      })


    var matchedVariant = product.variants.find(variant => {
      var pass = true;
      for(var i=0; i<selectedOptions.length; i++){
        if(selectedOptions.indexOf(variant.options[i]) == -1){
          pass = false
          break
        }
      }
      return pass
    })

    document.querySelector('#product-id').value = matchedVariant.id


    var url = new URLParse(window.location.href, true)
    url.query.variant =  matchedVariant.id
    window.history.replaceState(null, null, url.toString());



      document.querySelector('.product-price').textContent = formatMoney(matchedVariant.price, "{{ shop.money_format }}") 
      document.querySelector('.product__price--compare').textContent = formatMoney(matchedVariant.compare_at_price, "{{ shop.money_format }}") 


    matchedVariant.compare_at_price > matchedVariant.price ?
     document.querySelector('.product__price--compares').classList.remove('hide') :
    document.querySelector('.product__price--compares').classList.add('hide')





if(matchedVariant.featured_image){
    document.querySelector('#product-image').setAttribute('src', matchedVariant.featured_image.src)
    document.querySelector('.thubnail-image-slider .mail-image.slick-current').classList.remove('slick-current')
    document.querySelectorAll('.thubnail-image-slider .mail-image')[matchedVariant.featured_image.position-1].classList.add('slick-current')
}

    
  var addtocart = document.querySelector('.add-to-cart');
  if(matchedVariant.available){
    addtocart.textContent = "Add To Cart!"
    addtocart.disabled = false
  }else{
     addtocart.textContent = "Out Of sTock"
    addtocart.disabled = true
    }
    
    
   });
    
  });

  document.querySelector('.plus').addEventListener('click', ()=> {
    currentValue =  Number(document.querySelector('#quantity').value)
    document.querySelector('#quantity').value = currentValue + 1;
  })


   document.querySelector('.minus').addEventListener('click', ()=> {
    currentValue =  Number(document.querySelector('#quantity').value)
     if( currentValue > 1){
      document.querySelector('#quantity').value = currentValue - 1;
     }
   
  })

  
 </script>
